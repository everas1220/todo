1. application.priperties 수정
2. modelmapper 라이브러리 추가
 </dependency>
	<dependency>
    <groupId>org.modelmapper</groupId>
    <artifactId>modelmapper</artifactId>
    <version>3.2.2</version>
 </dependency>
3. Thymeleaf Layout Dialect
 	<dependency>
    <groupId>nz.net.ultraq.thymeleaf</groupId>
    <artifactId>thymeleaf-layout-dialect</artifactId>
    <version>3.4.0</version>
4. modelmapper 사용을 위해 config 파일 작성
5. BaseEntity 작성
6. main 클래스에 @EnableJpaAuditing 추가 작성  


-----------------------------------------------------------------------
ToDo
 - todo 작성
 - todo 완료 여부확인
 - todo 전체 목록보기(완료하지않은 목록)
 - todo 삭제 
 - 작성을 완료한 todo 목록보기

ToDo 테이블 
 - 내용, 작성일자,수정일자,완료여부(true,false),중요도(중요: true, 반대는 false)
 

------------------------------------

404 에러 : 컨트롤러 
403 에러 : scrf 값 확인 form action 값 적었는지 확인
           axios, fetch => headers 에 값 추가했는지 확인
500 에러 : 서버 터미널

js 수정 : 브라우저 콘솔




-thymeleaf security 표현하기 
 -value="${#authentication.principal.name}"
 -sec:authentication="name" : id 가져오가
 -sec:authentication="principal.authorities" : 권한 가져오기
 -sec:authorize="hasAnyRole({'ROLE_USER','ROLE_ADMIN','ROLE_MANAGER'})"
    hasAnyRole() : Role 여러개 중에 하나만 만족한다면
    hasRole() : Role 하나만 작성하고 그 Role를 만족한다면

- 작성한 경로를 제외하고는 모두 로그인이 필요함 
http 
.authorizeHttpRequests(authorize -> authorize.requestMatchers("/assets/**", "/css/**", "/js/**", "/img/**").permitAll()
.anyRequest().authenticated())

- .anyRequest().permitAll() : 컨트롤러 메소드 단에서 제어
    @PreAuthorize("is")


서버 : 스프링부트 
        컨트롤러 -> 서비스 -> 리포지토리 
        ex) DTO, Entity
 화면 : 프로젝트마다 다름
        jsp(레거시 프로젝트), 템플릿(thymeleaf,.....)requestMatchers
    
   jsp 는 thymeleaf 와 유사 
            스프링부트에서는 jsp는 기본 템플릿이 아님 => 설정 작업 필요 